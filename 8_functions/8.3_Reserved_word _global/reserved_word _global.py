# Зарезервированное слово «global»

"""Чтобы присвоить некоторое значение переменной, определённой на высшем уровне
программы (т.е. не в какой-либо области видимости, как то функции или классы), необ-
ходимо указать Python, что её имя не локально, а глобально (global). Сделаем это при помо-
щи зарезервированного слова global. Без применения зарезервированного слова global
невозможно присвоить значение переменной, определённой за пределами функции.
Можно использовать уже существующие значения переменных, определённых за пре-
делами функции (при условии, что внутри функции не было объявлено переменной с
таким же именем). Однако, это не приветствуется, и его следует избегать, поскольку че-
ловеку, читающему текст программы, будет непонятно, где находится объявление пере-
менной. Использование зарезервированного слова global достаточно ясно показывает,
что переменная объявлена в самом внешнем блоке."""


# x = 50

# def func():
#     global x
#     print('x равно', x)
#     x = 2
#     print('Заменяем глобальное значение x на', x)


# func()
# print('Значение x составляет', x)

# Вывод:
# $ python func_global.py
# x равно 50
# Заменяем глобальное значение x на 2
# Знчение x составляет 2
