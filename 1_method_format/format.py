#  Метод format
"""Как это работает:
В строку могут быть включены определённые обозначения, а впоследствии
может быть вызван метод format для замещения этих обозначений соответ-
ствующими аргументами.
Взгляните на первый случай применения обозначений, где мы пишем {0}, и
это соответствует переменной name, являющейся первым аргументом метода
format. Аналогично, второе обозначение {1} соответствует переменной age,
являющейся вторым аргументом метода format. Заметьте, что Python начина-
ет отсчёт с 0, поэтому первая позиция – номер 0, вторая – номер 1 и т.д.
Заметьте, мы ведь могли добиться того же самого результата и объединением
строк: 'Возраст' + name + ' -- ' + str(age) + ' лет.', однако вы сами
видите, как это некрасиво, и как легко в таком случае допустить ошибку. Во-
вторых, преобразование в строку делается методом format автоматически, в
отличие от явного преобразования в нашем примере. В-третьих, используя
метод format, мы можем изменить сообщение, не затрагивая используемых
переменных, и наоборот.
На всякий случай имейте в виду, что цифры здесь не обязательны. Можно
было бы просто написать:
age = 26
name = 'Swaroop'
print('Возраст {} -- {} лет.'.format(name, age))
print('Почему {} забавляется с этим Python?'.format(name))
и получить такой же результат, как и ранее.
"""

# age = 20
# name = 'Swaroop'

# #  Возраст Swaroop -- 20
# print('Возраст {0} -- {1}'.format(name, age))
# #  Почему Swaroop забавляется с этим в Python ?
# print('Почему {0} забавляется с этим в Python ?'.format(name))
